<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.oops.myproj</groupId>
	<artifactId>myproj-property</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>myproj-property</name>
	<url>http://maven.apache.org</url>
	<!-- 除了这里的这三种，还可以用settins.开头的属性引用settings里的元素 -->
	<!-- s所有的java系统属性都可以用maven属性引用 -->
	<!-- 所有的环境变量都可以用env.开头的属性引用 -->
	<properties>
		<springVersion>5.1.5.RELEASE</springVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
		    <!-- POM属性可以用project.×××来引用POM文件中对应元素的值 -->
			<groupId>${project.groupId}</groupId>
			<artifactId>projectA</artifactId>
			<!-- 内置属性 -->
			<version>${version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-expression -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<!-- 自定义属性：可以在POM的properties下自定义maven属性 -->
			<version>${springVersion}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
